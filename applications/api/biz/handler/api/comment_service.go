// Code generated by hertz generator.

package api

import (
	"context"
	"github.com/TremblingV5/DouTok/applications/api/biz/handler"
	"github.com/TremblingV5/DouTok/applications/api/initialize/rpc"
	"github.com/TremblingV5/DouTok/kitex_gen/comment"
	"github.com/TremblingV5/DouTok/pkg/errno"

	api "github.com/TremblingV5/DouTok/applications/api/biz/model/api"
	"github.com/cloudwego/hertz/pkg/app"
)

// CommentAction .
// @router /douyin/comment/action [POST]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinCommentActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		handler.SendResponse(c, handler.BuildCommendActionResp(errno.ErrBind))
		return
	}

	rpcReq := comment.DouyinCommentActionRequest{
		VideoId:     req.VideoId,
		CommentText: req.CommentText,
		CommentId:   req.CommentId,
		UserId:      int64(c.Keys["user_id"].(float64)),
		ActionType:  req.ActionType,
	}

	resp, err := rpc.CommentAction(ctx, rpc.CommentClient, &rpcReq)
	if err != nil {
		handler.SendResponse(c, handler.BuildCommendActionResp(errno.ConvertErr(err)))
		return
	}
	// TODO 此处直接返回了 rpc 的 resp
	handler.SendResponse(c, resp)
}

// CommentList .
// @router /douyin/comment/list [GET]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinCommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		handler.SendResponse(c, handler.BuildCommendListResp(errno.ErrBind))
		return
	}

	resp, err := rpc.CommentList(ctx, rpc.CommentClient, &comment.DouyinCommentListRequest{
		VideoId: req.VideoId,
	})
	if err != nil {
		handler.SendResponse(c, handler.BuildCommendListResp(errno.ConvertErr(err)))
		return
	}
	// TODO 此处直接返回了 rpc 的 resp
	handler.SendResponse(c, resp)
}
